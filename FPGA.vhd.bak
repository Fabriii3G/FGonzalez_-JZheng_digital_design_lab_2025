library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity FPGA_Top is
    port(
        SW    : in  std_logic_vector(9 downto 0);   -- switches
        HEX0  : out std_logic_vector(6 downto 0);   -- resultado Y
        HEX1  : out std_logic_vector(6 downto 0);   -- en blanco
        HEX2  : out std_logic_vector(6 downto 0);   -- B
        HEX3  : out std_logic_vector(6 downto 0);   -- A
        LEDR  : out std_logic_vector(0 downto 0)    -- Cout
    );
end FPGA_Top;

architecture Structural of FPGA_Top is
    -- Señales internas
    signal A, B, Y : std_logic_vector(3 downto 0);
    signal Cin, Cout : std_logic;

    -- Componentes
    component Fullsub_4bits
        port (
            A1, B1 : in  std_logic_vector(3 downto 0);
            Cin1   : in  std_logic;
            Cout1  : out std_logic;
            Y1     : out std_logic_vector(3 downto 0)
        );
    end component;

    component Hex7Seg
        port(
            N   : in  std_logic_vector(3 downto 0);
            HEX : out std_logic_vector(6 downto 0)
        );
    end component;

begin
    -- Conexión de switches
    A   <= SW(3 downto 0);
    B   <= SW(7 downto 4);
    Cin <= SW(8);

    -- DUT
    U_SUB: Fullsub_4bits
        port map(
            A1    => A,
            B1    => B,
            Cin1  => Cin,
            Cout1 => Cout,
            Y1    => Y
        );

    -- Decodificadores
    U_HEX_Y : Hex7Seg port map(N => Y, HEX => HEX0);
    U_HEX_B : Hex7Seg port map(N => B, HEX => HEX2);
    U_HEX_A : Hex7Seg port map(N => A, HEX => HEX3);

    -- HEX1 en blanco (1111111 en activo-bajo)
    HEX1 <= (others => '1');

    -- Cout en LED
    LEDR(0) <= Cout;

end Structural;
